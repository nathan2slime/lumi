# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Bill {
  client: Client!
  created_at: DateTime!
  date: DateTime!
  deleted_at: DateTime
  due_date: DateTime!
  file: String!
  id: String!
  items: [BillItem!]!
  public_lighting_contribution: Float
  total_price: Float!
  updated_at: DateTime
}

input BillInput {
  client: String!
  date: DateTime!
  due_date: DateTime!
  file: String!
  items: [BillItemInput!]! = []
  public_lighting_contribution: Float
  total_price: Float!
}

type BillItem {
  amount: Float!
  bill: Bill!
  created_at: DateTime!
  deleted_at: DateTime
  id: String!
  price: Float!
  type: String!
  unit_price: Float!
  updated_at: DateTime
}

input BillItemInput {
  amount: Float!
  price: Float!
  type: String!
  unit_price: Float!
}

type Bills {
  items: [Bill!]!
  meta: Paginate!
}

type Client {
  address: String
  bills: [Bill!]!
  created_at: DateTime!
  deleted_at: DateTime
  id: String!
  installation: Float
  number: String!
  updated_at: DateTime
  user: User!
}

type Clients {
  items: [Client!]!
  meta: Paginate!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  CreateBill(data: BillInput!): Bill!
  SignIn(data: SignInInput!): User!
  SignUp(data: SignUpInput!): User!
}

type Paginate {
  currentPage: Float!
  itemCount: Float!
  itemsPerPage: Float!
  totalItems: Float
  totalPages: Float
}

type Permission {
  created_at: DateTime!
  deleted_at: DateTime
  id: String!
  name: String!
  updated_at: DateTime
}

type Query {
  Auth: User!
  Bills(data: SearchBillInput!): Bills!
  Clients(data: SearchClientInput!): Clients!
}

type Role {
  created_at: DateTime!
  deleted_at: DateTime
  id: String!
  name: String!
  permissions: [Permission!]!
  updated_at: DateTime
  user: User!
}

input SearchBillInput {
  client: String!
  limit: Float!
  page: Float!
}

input SearchClientInput {
  limit: Float!
  number: String!
  page: Float!
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  email: String!
  name: String!
  password: String!
  surname: String!
}

type Token {
  created_at: DateTime!
  deleted_at: DateTime
  id: String!
  type: String!
  updated_at: DateTime
  user: User!
  value: String!
}

type User {
  clients: [Client!]
  created_at: DateTime!
  deleted_at: DateTime
  email: String!
  id: String!
  name: String!
  roles: [Role!]
  surname: String!
  tokens: [Token!]
  updated_at: DateTime
}